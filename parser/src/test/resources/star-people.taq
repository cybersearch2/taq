axiom list person_list 
             (name, sex, age, starsign)
             {"John", "m", 23, "gemini"} 
             {"Sue", "f", 19, "cancer"} 
             {"Sam", "m", 24, "scorpio"} 
             {"Jenny", "f", 21, "gemini"} 
             {"Andrew", "m", 26, "virgo"} 
             {"Alice", "f", 20, "pices"} 
             {"Ingrid", "f", 23, "cancer"} 
             {"Jack", "m", 32, "pices"} 
             {"Sonia", "f", 33, "gemini"} 
             {"Alex", "m", 22, "aquarius"} 
             {"Jill", "f", 33, "cancer"} 
             {"Fiona", "f", 29, "gemini"} 
             {"melissa", "f", 30, "virgo"} 
             {"Tom", "m", 22, "cancer"} 
             {"Bill", "m", 19, "virgo"} 
             
flow people_by_starsign
{ 
  string starsign,
  integer i,
  list<term> person 
}
(
  list<axiom> candidates,
  {
    person = person_list[i],
    ? person->starsign == starsign
      { candidates += person },
    ? ++i < person_list.size()
  }
)

flow match_geminis
{ 
  export list<axiom> geminis {},
  integer i
}
(
  flow people_by_starsign(starsign="gemini") {
    list<axiom> candidates, 
    {
      ? fact candidates[i],
      geminis += candidates[i++]
    }
  }
)

query<term> match(match_geminis)

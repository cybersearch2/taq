/** Copyright 2022 Andrew J Bowley

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License. */
package au.com.cybersearch2.taq.engine;

import java.io.InputStream;

/**
 * API for main parser class generated by javacc.
 * This hides the ugly parser code and provides a clean separation
 * of concerns - grammatical analysis of TAQ script opposed to applying
 * compiler logic to the resulting token stream.
 * @author Andrew Bowley
 *
 */
public interface Parser {

	/**
	 * Apply initialization in preparation for parsing another source document
	 * @param stream Docment input stream. Calls parser ReInit() method.
	 */
	void reinitialize(InputStream stream);
	
	/**
	 * 
	 * @param compiler Compiler to receive non-terminal parser productions
	 */
	void parse(Compiler compiler);
	
	/**
	 * Returns a new parser instance created with given input stream
	 * @param instream Document input stream
	 * @return Parser object
	 */
	Parser parserInstance(InputStream instream);
}
